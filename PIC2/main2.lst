CCS PCM C Compiler, Version 5.015, 5967               02-abr.-21 19:04

               Filename:   D:\arc\UNIVERSIDAD\6to Semestre\Circuitos Digitales II\BusinessModel\BusinessModel\PIC2\main2.lst

               ROM used:   337 words (4%)
                           Largest free fragment is 2048
               RAM used:   16 (4%) at main() level
                           18 (5%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   100
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses xt,noprotect,nowdt,nobrownout,noput,nolvp 
.................... #use delay(clock=4000000,crystal) 
*
004D:  MOVLW  2C
004E:  MOVWF  04
004F:  BCF    03.7
0050:  MOVF   00,W
0051:  BTFSC  03.2
0052:  GOTO   061
0053:  MOVLW  01
0054:  MOVWF  78
0055:  CLRF   77
0056:  DECFSZ 77,F
0057:  GOTO   056
0058:  DECFSZ 78,F
0059:  GOTO   055
005A:  MOVLW  4A
005B:  MOVWF  77
005C:  DECFSZ 77,F
005D:  GOTO   05C
005E:  GOTO   05F
005F:  DECFSZ 00,F
0060:  GOTO   053
0061:  RETURN
.................... #use rs232(baud=57600,xmit=pin_c6,rcv=pin_c7,bits=8) 
.................... #use standard_io(B) 
.................... #use standard_io(C) 
.................... #define bobina_1 PIN_D4                      //Puertos para los motores 
.................... #define bobina_2 PIN_D5 
.................... #define bobina_3 PIN_D6 
.................... #define bobina_4 PIN_D7 
....................  
.................... void pasos_izquierda(int velocidad); 
.................... void pasos_derecha(int velocidad); 
.................... void pasos_off(void); 
....................  
.................... int order; 
.................... int direction; 
.................... int lastdir = 0; 
....................  
.................... #int_RDA 
.................... RDA_isr() 
.................... { 
....................   order=getc(); 
*
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  MOVWF  28
0035:  BCF    0C.5
0036:  BCF    0A.3
0037:  BCF    0A.4
0038:  GOTO   01D
.................... } 
....................  
.................... void pasos_izquierda(int velocidad) 
.................... { 
....................    output_low(bobina_1); 
*
0062:  BSF    03.5
0063:  BCF    08.4
0064:  BCF    03.5
0065:  BCF    08.4
....................    output_low(bobina_2); 
0066:  BSF    03.5
0067:  BCF    08.5
0068:  BCF    03.5
0069:  BCF    08.5
....................    output_high(bobina_3); 
006A:  BSF    03.5
006B:  BCF    08.6
006C:  BCF    03.5
006D:  BSF    08.6
....................    output_high(bobina_4); 
006E:  BSF    03.5
006F:  BCF    08.7
0070:  BCF    03.5
0071:  BSF    08.7
....................    delay_ms(velocidad); 
0072:  MOVF   2B,W
0073:  MOVWF  2C
0074:  CALL   04D
....................     
....................    output_low(bobina_1); 
0075:  BSF    03.5
0076:  BCF    08.4
0077:  BCF    03.5
0078:  BCF    08.4
....................    output_high(bobina_2); 
0079:  BSF    03.5
007A:  BCF    08.5
007B:  BCF    03.5
007C:  BSF    08.5
....................    output_high(bobina_3); 
007D:  BSF    03.5
007E:  BCF    08.6
007F:  BCF    03.5
0080:  BSF    08.6
....................    output_low(bobina_4); 
0081:  BSF    03.5
0082:  BCF    08.7
0083:  BCF    03.5
0084:  BCF    08.7
....................    delay_ms(velocidad); 
0085:  MOVF   2B,W
0086:  MOVWF  2C
0087:  CALL   04D
....................     
....................    output_high(bobina_1); 
0088:  BSF    03.5
0089:  BCF    08.4
008A:  BCF    03.5
008B:  BSF    08.4
....................    output_high(bobina_2); 
008C:  BSF    03.5
008D:  BCF    08.5
008E:  BCF    03.5
008F:  BSF    08.5
....................    output_low(bobina_3); 
0090:  BSF    03.5
0091:  BCF    08.6
0092:  BCF    03.5
0093:  BCF    08.6
....................    output_low(bobina_4); 
0094:  BSF    03.5
0095:  BCF    08.7
0096:  BCF    03.5
0097:  BCF    08.7
....................    delay_ms(velocidad); 
0098:  MOVF   2B,W
0099:  MOVWF  2C
009A:  CALL   04D
....................     
....................    output_high(bobina_1); 
009B:  BSF    03.5
009C:  BCF    08.4
009D:  BCF    03.5
009E:  BSF    08.4
....................    output_low(bobina_2); 
009F:  BSF    03.5
00A0:  BCF    08.5
00A1:  BCF    03.5
00A2:  BCF    08.5
....................    output_low(bobina_3); 
00A3:  BSF    03.5
00A4:  BCF    08.6
00A5:  BCF    03.5
00A6:  BCF    08.6
....................    output_high(bobina_4); 
00A7:  BSF    03.5
00A8:  BCF    08.7
00A9:  BCF    03.5
00AA:  BSF    08.7
....................    delay_ms(velocidad); 
00AB:  MOVF   2B,W
00AC:  MOVWF  2C
00AD:  CALL   04D
....................     
....................    direction = 1; 
00AE:  MOVLW  01
00AF:  MOVWF  29
00B0:  RETURN
.................... } 
....................  
.................... void pasos_derecha(int velocidad) 
.................... { 
....................    output_high(bobina_1); 
00B1:  BSF    03.5
00B2:  BCF    08.4
00B3:  BCF    03.5
00B4:  BSF    08.4
....................    output_high(bobina_2); 
00B5:  BSF    03.5
00B6:  BCF    08.5
00B7:  BCF    03.5
00B8:  BSF    08.5
....................    output_low(bobina_3); 
00B9:  BSF    03.5
00BA:  BCF    08.6
00BB:  BCF    03.5
00BC:  BCF    08.6
....................    output_low(bobina_4); 
00BD:  BSF    03.5
00BE:  BCF    08.7
00BF:  BCF    03.5
00C0:  BCF    08.7
....................    delay_ms(velocidad); 
00C1:  MOVF   2B,W
00C2:  MOVWF  2C
00C3:  CALL   04D
....................     
....................    output_low(bobina_1); 
00C4:  BSF    03.5
00C5:  BCF    08.4
00C6:  BCF    03.5
00C7:  BCF    08.4
....................    output_high(bobina_2); 
00C8:  BSF    03.5
00C9:  BCF    08.5
00CA:  BCF    03.5
00CB:  BSF    08.5
....................    output_high(bobina_3); 
00CC:  BSF    03.5
00CD:  BCF    08.6
00CE:  BCF    03.5
00CF:  BSF    08.6
....................    output_low(bobina_4); 
00D0:  BSF    03.5
00D1:  BCF    08.7
00D2:  BCF    03.5
00D3:  BCF    08.7
....................    delay_ms(velocidad); 
00D4:  MOVF   2B,W
00D5:  MOVWF  2C
00D6:  CALL   04D
....................     
....................    output_low(bobina_1); 
00D7:  BSF    03.5
00D8:  BCF    08.4
00D9:  BCF    03.5
00DA:  BCF    08.4
....................    output_low(bobina_2); 
00DB:  BSF    03.5
00DC:  BCF    08.5
00DD:  BCF    03.5
00DE:  BCF    08.5
....................    output_high(bobina_3); 
00DF:  BSF    03.5
00E0:  BCF    08.6
00E1:  BCF    03.5
00E2:  BSF    08.6
....................    output_high(bobina_4); 
00E3:  BSF    03.5
00E4:  BCF    08.7
00E5:  BCF    03.5
00E6:  BSF    08.7
....................    delay_ms(velocidad); 
00E7:  MOVF   2B,W
00E8:  MOVWF  2C
00E9:  CALL   04D
....................     
....................    output_high(bobina_1); 
00EA:  BSF    03.5
00EB:  BCF    08.4
00EC:  BCF    03.5
00ED:  BSF    08.4
....................    output_low(bobina_2); 
00EE:  BSF    03.5
00EF:  BCF    08.5
00F0:  BCF    03.5
00F1:  BCF    08.5
....................    output_low(bobina_3); 
00F2:  BSF    03.5
00F3:  BCF    08.6
00F4:  BCF    03.5
00F5:  BCF    08.6
....................    output_high(bobina_4); 
00F6:  BSF    03.5
00F7:  BCF    08.7
00F8:  BCF    03.5
00F9:  BSF    08.7
....................    delay_ms(velocidad); 
00FA:  MOVF   2B,W
00FB:  MOVWF  2C
00FC:  CALL   04D
....................     
....................    direction = 2; 
00FD:  MOVLW  02
00FE:  MOVWF  29
00FF:  RETURN
.................... } 
....................  
.................... void pasos_off(void) 
.................... { 
....................    output_low(bobina_1); 
*
0039:  BSF    03.5
003A:  BCF    08.4
003B:  BCF    03.5
003C:  BCF    08.4
....................    output_low(bobina_2); 
003D:  BSF    03.5
003E:  BCF    08.5
003F:  BCF    03.5
0040:  BCF    08.5
....................    output_low(bobina_3); 
0041:  BSF    03.5
0042:  BCF    08.6
0043:  BCF    03.5
0044:  BCF    08.6
....................    output_low(bobina_4); 
0045:  BSF    03.5
0046:  BCF    08.7
0047:  BCF    03.5
0048:  BCF    08.7
....................     
....................    lastdir = direction; 
0049:  MOVF   29,W
004A:  MOVWF  2A
....................    direction = 0; 
004B:  CLRF   29
004C:  RETURN
.................... } 
....................  
.................... void main() 
*
0100:  MOVF   03,W
0101:  ANDLW  1F
0102:  MOVWF  03
0103:  BSF    03.5
0104:  BSF    03.6
0105:  BSF    07.3
0106:  MOVLW  10
0107:  BCF    03.6
0108:  MOVWF  19
0109:  MOVLW  00
010A:  MOVWF  1A
010B:  MOVLW  A6
010C:  MOVWF  18
010D:  MOVLW  90
010E:  BCF    03.5
010F:  MOVWF  18
0110:  MOVLW  FF
0111:  MOVWF  27
0112:  CLRF   2A
0113:  BSF    03.5
0114:  BSF    03.6
0115:  MOVF   09,W
0116:  ANDLW  C0
0117:  MOVWF  09
0118:  BCF    03.6
0119:  BCF    1F.4
011A:  BCF    1F.5
011B:  MOVLW  00
011C:  BSF    03.6
011D:  MOVWF  08
011E:  BCF    03.5
011F:  CLRF   07
0120:  CLRF   08
0121:  CLRF   09
0122:  BCF    03.7
.................... { 
....................    enable_interrupts(INT_RDA); 
0123:  BSF    03.5
0124:  BCF    03.6
0125:  BSF    0C.5
....................    enable_interrupts(GLOBAL); 
0126:  MOVLW  C0
0127:  BCF    03.5
0128:  IORWF  0B,F
....................   
....................    pasos_off(); 
0129:  CALL   039
....................     
....................    if(order == 1) 
012A:  DECFSZ 28,W
012B:  GOTO   12F
....................    { 
....................       pasos_izquierda(80); 
012C:  MOVLW  50
012D:  MOVWF  2B
012E:  CALL   062
....................        
....................    } 
....................     
....................    if(order == 2) 
012F:  MOVF   28,W
0130:  SUBLW  02
0131:  BTFSS  03.2
0132:  GOTO   136
....................    { 
....................       pasos_derecha(80); 
0133:  MOVLW  50
0134:  MOVWF  2B
0135:  CALL   0B1
....................    } 
....................     
....................    if(order == 3) 
0136:  MOVF   28,W
0137:  SUBLW  03
0138:  BTFSS  03.2
0139:  GOTO   150
....................    { 
....................       if(direction == 1) 
013A:  DECFSZ 29,W
013B:  GOTO   13D
....................       { 
....................          pasos_off(); 
013C:  CALL   039
....................       } 
....................        
....................       if(direction == 2) 
013D:  MOVF   29,W
013E:  SUBLW  02
013F:  BTFSC  03.2
....................       { 
....................          pasos_off(); 
0140:  CALL   039
....................       } 
....................        
....................       if(direction == 0) 
0141:  MOVF   29,F
0142:  BTFSS  03.2
0143:  GOTO   150
....................       { 
....................          if(lastdir == 1) 
0144:  DECFSZ 2A,W
0145:  GOTO   149
....................          { 
....................             pasos_izquierda(80); 
0146:  MOVLW  50
0147:  MOVWF  2B
0148:  CALL   062
....................          } 
....................           
....................          if(lastdir == 2) 
0149:  MOVF   2A,W
014A:  SUBLW  02
014B:  BTFSS  03.2
014C:  GOTO   150
....................          { 
....................             pasos_derecha(80); 
014D:  MOVLW  50
014E:  MOVWF  2B
014F:  CALL   0B1
....................          } 
....................       } 
....................    } 
.................... } 
0150:  SLEEP

Configuration Fuses:
   Word  1: 2CF1   XT NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
